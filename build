#!/bin/bash
set -e

SELFDIR=`dirname "$0"`
SELFDIR=`cd "$SELFDIR" && pwd`

DATA_DIR=
OUTPUT_DIR=
X86_BINARIES=true
X64_BINARIES=true
CONCURRENCY=2
SETUP_SOURCE=true
COMPILE=true
SANITY_CHECK_OUTPUT=true

function usage()
{
	echo "Usage: ./build [options] <DATA DIR> <OUTPUT_DIR>"
	echo "Build Traveling Ruby binaries."
	echo
	echo "Options:"
	echo "  -t         Only build 32-bit binaries"
	echo "  -T         Do not build 32-bit binaries"
	echo "  -s         Only build 64-bit binaries"
	echo "  -S         Do not build 64-bit binaries"
	echo
	echo "  -E         Do not setup source"
	echo "  -C         Do not compile"
	echo
	echo "  -j NUMBER  Set build concurrency. Default: 2"
	echo "  -h         Show this help"
}

function parse_options()
{
	local OPTIND=1
	local opt
	while getopts "tTsSECj:h" opt; do
		case "$opt" in
		t)
			X84_BINARIES=true
			X64_BINARIES=false
			;;
		T)
			X84_BINARIES=false
			;;
		s)
			X84_BINARIES=false
			X64_BINARIES=true
			;;
		S)
			X64_BINARIES=false
			;;
		E)
			SETUP_SOURCE=false
			;;
		C)
			COMPILE=false
			;;
		j)
			CONCURRENCY=$OPTARG
			;;
		h)
			usage
			exit
			;;
		*)
			return 1
			;;
		esac
	done

	(( OPTIND -= 1 )) || true
	shift $OPTIND || true
	DATA_DIR="$1"
	OUTPUT_DIR="$2"

	if [[ "$DATA_DIR" = "" || "$OUTPUT_DIR" = "" ]]; then
		usage
		exit 1
	fi
	if [[ ! -e "$DATA_DIR" ]]; then
		echo "ERROR: $DATA_DIR doesn't exist."
		exit 1
	fi
	if [[ ! -e "$OUTPUT_DIR" ]]; then
		echo "ERROR: $OUTPUT_DIR doesn't exist."
		exit 1
	fi
}


parse_options "$@"
DATA_DIR=`cd "$DATA_DIR" && pwd`
OUTPUT_DIR=`cd "$OUTPUT_DIR" && pwd`
if [[ ! -e "$DATA_DIR/mock" ]]; then
	echo "ERROR: data directory $DATA_DIR not set up. Please run ./setup first."
	exit 1
fi

exec docker run \
	--rm \
	--cap-add SYS_ADMIN --cap-add SYS_CHROOT \
	-v "$SELFDIR/internal:/system:ro" \
	-v "$DATA_DIR/mock:/var/lib/mock" \
	-v "$OUTPUT_DIR:/output" \
	-e "APP_UID=`id -u`" \
	-e "APP_GID=`id -g`" \
	-e "X86_BINARIES=$X86_BINARIES" \
	-e "X64_BINARIES=$X64_BINARIES" \
	-e "CONCURRENCY=$CONCURRENCY" \
	-e "SETUP_SOURCE=$SETUP_SOURCE" \
	-e "COMPILE=$COMPILE" \
	-e "SANITY_CHECK_OUTPUT=$SANITY_CHECK_OUTPUT" \
	phusion/ruby-traveler-builder \
	/system/my_init --quiet --skip-runit --skip-startup-files -- \
	/system/build
