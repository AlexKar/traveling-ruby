#!/bin/bash
set -e

SELFDIR=`dirname "$0"`
SELFDIR=`cd "$SELFDIR" && pwd`
source "$SELFDIR/../shared/library.sh"

TEMPDIR=

function cleanup()
{
	if [[ "$TEMPDIR" != "" ]]; then
		rm -rf "$TEMPDIR"
	fi
}

if [[ $# == 0 ]]; then
	echo "Usage: ./upload <FILES>"
	echo "Uploads files to Amazon S3."
	exit 1
fi

if [[ ! -e ~/.s3cfg ]]; then
	echo "~/.s3cfg doesn't exist; configuring one..."
	TEMPDIR=`mktemp -d /tmp/traveling-ruby.XXXXXXXX`
	touch "$TEMPDIR/s3cfg"
	docker run --rm -t -i \
		-v "$SELFDIR/internal:/system:ro" \
		-v "$TEMPDIR:/work" \
		phusion/ruby-traveler-builder \
		/system/my_init --quiet --skip-runit --skip-startup-files -- \
		/system/s3configure
	cp "$TEMPDIR/s3cfg" ~/.s3cfg
	rm -rf "$TEMPDIR"
	TEMPDIR=
	echo
fi

MOUNTS=()
FILE_BASENAMES=()
DIR_BASENAMES=()
for F in "$@"; do
	BASENAME="`basename \"$F\"`"
	F="`absolute_path \"$F\"`"
	
	MOUNTS+=(-v "$F:/$BASENAME:ro")
	if [[ -f "$F" ]]; then
		FILE_BASENAMES+=("$BASENAME")
	else
		DIR_BASENAMES+=("$BASENAME")
	fi
done

header "Uploading ${FILE_BASENAMES[@]} to Amazon S3..."
S3CFG="`echo ~/.s3cfg`"

docker run --rm -t -i \
	"${MOUNTS[@]}" \
	-v "$S3CFG:/s3cfg:ro" \
	-v "$SELFDIR/internal:/system:ro" \
	phusion/ruby-traveler-builder \
	/system/my_init --quiet --skip-runit --skip-startup-files -- \
	/system/s3init \
	s3cmd -P put "${FILE_BASENAMES[@]}" s3://traveling-ruby/releases/

for DIR_BASENAME in "${DIR_BASENAMES[@]}"; do
	header "Uploading $DIR_BASNEMAE to Amazon S3..."
	docker run --rm -t -i \
		"${MOUNTS[@]}" \
		-v "$S3CFG:/s3cfg:ro" \
		-v "$SELFDIR/internal:/system:ro" \
		phusion/ruby-traveler-builder \
		/system/my_init --quiet --skip-runit --skip-startup-files -- \
		/system/s3init \
		s3cmd -P --delete-removed sync "$DIR_BASENAME" "s3://traveling-ruby/releases/$DIR_BASENAME"
done
